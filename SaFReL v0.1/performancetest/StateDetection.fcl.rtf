{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red242\green242\blue242;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17580\viewh11660\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
FUNCTION_BLOCK StateDetection	// Block definition (there may be more than one block per file)\
\
// Define input variables\
VAR_INPUT				\
	CPUU : REAL;\
	MemU : REAL;\
	DiskU : REAL;\
	RT : REAL;\
END_VAR\
\
// Define output variable\
VAR_OUTPUT				\
	State : REAL;\
END_VAR\
\
// Fuzzify input variable 'CPUU\'92: \{\'91High\'92, \'91Low\'92\}\
FUZZIFY CPUU			\
	TERM High := (0, 1) (0.25, 1) (0.75, 0) (1, 0); \
	TERM Low := (0, 0) (0.25, 0) (0.75, 1) (1, 1);\
END_FUZZIFY\
\
// Fuzzify input variable \'91MemU\'92: \{\'91High\'92, \'91Low\'92\}\
FUZZIFY MemU			\
	TERM High := (0, 1) (0.25, 1) (0.75, 0) (1, 0); \
	TERM Low := (0, 0) (0.25, 0) (0.75, 1) (1, 1);\
END_FUZZIFY\
\
// Fuzzify input variable \'91DiskU': \{\'91High\'92, \'91Low\'92\}\
FUZZIFY DiskU		\
	TERM High := (0, 1) (0.25, 1) (0.75, 0) (1, 0); \
	TERM Low := (0, 0) (0.25, 0) (0.75, 1) (1, 1);\
END_FUZZIFY\
\
// Fuzzify input variable \'91RT\'92: \{\'91Low\'92, \'91Acceptable\'92, \'91High\'92\}\
FUZZIFY RT			\
	TERM Low := (0, 1) (0.44, 1) (0.5, 0) (1, 0);\
 	TERM Acceptable := (0, 0) (0.47, 0) (0.5, 1) (0.53, 0) (1, 0);\
	TERM High := (0, 0) (0.5, 0) (0.56, 1) (1, 1);\
END_FUZZIFY\
\
// Defzzzify output variable \'91State\'92 : \{\'91LLLL\'92, \'91LLLA\'92, \'91LLLH\'92, \'91LLHL\'92, \'91LLHA\'92, \'91LLHH\'92, \'91LHLL\'92, \'91LHLA\'92, \'91LHLH\'92, \'91LHHL\'92, \'91LHHA\'92, \'91LHHH\'92, \'91HLLL\'92, \'91HLLA\'92, \'91HLLH\'92, \'91HLHL\'92, \'91HLHA\'92, \'91HLHH\'92, \'91HHLL\'92, \'91HHLA\'92, \'91HHLH\'92, \'91HHHL\'92, \'91HHHA\'92, \'91HHHH\'92\}\
DEFUZZIFY \cf2 \cb3 State\cf2 \cb3 			\
	TERM LLLL := (0,0) (1,1) (2,0);\
	TERM LLLA := (2,0) (3,1) (4,0);\
	TERM LLLH := (4,0) (5,1) (6,0);\
	TERM LLHL := (6,0) (7,1) (8,0);\
	TERM LLHA := (8,0) (9,1) (10,0);\
	TERM LLHH := (10,0) (11,1) (12,0);\
	TERM LHLL := (12,0) (13,1) (14,0);\
	TERM LHLA := (14,0) (15,1) (16,0);\
	TERM LHLH := (16,0) (17,1) (18,0);\
	TERM LHHL := (18,0) (19,1) (20,0);\
	TERM LHHA := (20,0) (21,1) (22,0);\
	TERM LHHH := (22,0) (23,1) (24,0);\
	TERM HLLL := (24,0) (25,1) (26,0);\
	TERM HLLA := (26,0) (27,1) (28,0);\
	TERM HLLH := (28,0) (29,1) (30,0);\
	TERM HLHL := (30,0) (31,1) (32,0);\
	TERM HLHA := (32,0) (33,1) (34,0);\
	TERM HLHH := (34,0) (35,1) (36,0);\
	TERM HHLL := (36,0) (37,1) (38,0);\
	TERM HHLA := (38,0) (39,1) (40,0);\
	TERM HHLH := (40,0) (41,1) (42,0);	\
	TERM HHHL := (42,0) (43,1) (44,0);\
	TERM HHHA := (44,0) (45,1) (46,0);\
	TERM HHHH := (46,0) (47,1) (48,0);\
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method\
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)\
END_DEFUZZIFY\
\
// Inference rules\
RULEBLOCK No1\
	AND : MIN;	// Use 'min' for 'and'\
	ACT : MIN;	// Use 'min' activation method\
	ACCU : MAX;	// Use 'max' accumulation method\
\
	RULE 1 : IF CPUU IS Low AND MemU IS Low AND DiskU IS Low AND RT IS Low THEN State IS LLLL;\
	RULE 2 : IF CPUU IS Low AND MemU IS Low AND DiskU IS Low AND RT IS Acceptable THEN State IS LLLA;\
	RULE 3 : IF CPUU IS Low AND MemU IS Low AND DiskU IS Low AND RT IS High THEN State IS LLLH;\
	RULE 4 : IF CPUU IS Low AND MemU IS Low AND DiskU IS High AND RT IS Low THEN State IS LLHL;\
	RULE 5 : IF CPUU IS Low AND MemU IS Low AND DiskU IS High AND RT IS Acceptable THEN State IS LLHA;\
	RULE 6 : IF CPUU IS Low AND MemU IS Low AND DiskU IS High AND RT IS High THEN State IS LLHH;\
	RULE 7 : IF CPUU IS Low AND MemU IS High AND DiskU IS Low AND RT IS Low THEN State IS LHLL;\
	RULE 8 : IF CPUU IS Low AND MemU IS High AND DiskU IS Low AND RT IS Acceptable THEN State IS LHLA;\
	RULE 9 : IF CPUU IS Low AND MemU IS High AND DiskU IS Low AND RT IS High THEN State IS LHLH;\
	RULE 10 : IF CPUU IS Low AND MemU IS High AND DiskU IS High AND RT IS Low THEN State IS LHHL;\
	RULE 11 : IF CPUU IS Low AND MemU IS High AND DiskU IS High AND RT IS Acceptable THEN State IS LHHA;\
	RULE 12 : IF CPUU IS Low AND MemU IS High AND DiskU IS High AND RT IS High THEN State IS LHHH;\
	RULE 13 : IF CPUU IS High AND MemU IS Low AND DiskU IS Low AND RT IS Low THEN State IS HLLL;\
	RULE 14 : IF CPUU IS High AND MemU IS Low AND DiskU IS Low AND RT IS Acceptable THEN State IS HLLA;\
	RULE 15 : IF CPUU IS High AND MemU IS Low AND DiskU IS Low AND RT IS High THEN State IS HLLH;\
	RULE 16 : IF CPUU IS High AND MemU IS Low AND DiskU IS High AND RT IS Low THEN State IS HLHL;\
	RULE 17 : IF CPUU IS High AND MemU IS Low AND DiskU IS High AND RT IS Acceptable THEN State IS HLHA;\
	RULE 18 : IF CPUU IS High AND MemU IS Low AND DiskU IS High AND RT IS High THEN State IS HLHH;\
	RULE 19 : IF CPUU IS High AND MemU IS High AND DiskU IS Low AND RT IS Low THEN State IS HHLL;\
	RULE 20 : IF CPUU IS High AND MemU IS High AND DiskU IS Low AND RT IS Acceptable THEN State IS HHLA;\
	RULE 21 : IF CPUU IS High AND MemU IS High AND DiskU IS Low AND RT IS High THEN State IS HHLH;\
	RULE 22 : IF CPUU IS High AND MemU IS High AND DiskU IS High AND RT IS Low THEN State IS HHHL;\
	RULE 23 : IF CPUU IS High AND MemU IS High AND DiskU IS High AND RT IS Acceptable THEN State IS HHHA;\
	RULE 24 : IF CPUU IS High AND MemU IS High AND DiskU IS High AND RT IS High THEN State IS HHHH;\
END_RULEBLOCK\
\
END_FUNCTION_BLOCK\
}